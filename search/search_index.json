{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Carbonify \u00b6 Open source library for carbon accounting and Lifecycle analysis \u00b6 Manipulating carbon data is complex and requires both climate expertise and the knowledge of the right data source to make valid hypothesis. The Carbonify python library and tools are aimed to democratize data manipulation of carbon data to facilitate accounting and lifecycle analysis. Experimental This library is extremely experimental, under active development and alpha-release Don't expect the documentation to be up-to-date or all features to be tested Please contact us if you have any question Features \u00b6 Current features \u00b6 Easy access to Base Carbone by ADEME with data indexing Data visualization and search functionalities to easily find carbon ratios Installation \u00b6 Install from PyPi \u00b6 The library is available on PyPi via pip install carbonify For developers \u00b6 You can clone the github repo / fork and develop locally Poetry is used for environment management, dependencies and publishing, after clone you can run # To setup the environment poetry install # To run Jupyter notebook or a python console poetry run jupyter notebook poetry run python Contributors \u00b6 Ekimetrics","title":"Carbonify"},{"location":"#carbonify","text":"","title":"Carbonify"},{"location":"#open-source-library-for-carbon-accounting-and-lifecycle-analysis","text":"Manipulating carbon data is complex and requires both climate expertise and the knowledge of the right data source to make valid hypothesis. The Carbonify python library and tools are aimed to democratize data manipulation of carbon data to facilitate accounting and lifecycle analysis. Experimental This library is extremely experimental, under active development and alpha-release Don't expect the documentation to be up-to-date or all features to be tested Please contact us if you have any question","title":"Open source library for carbon accounting and Lifecycle analysis"},{"location":"#features","text":"","title":"Features"},{"location":"#current-features","text":"Easy access to Base Carbone by ADEME with data indexing Data visualization and search functionalities to easily find carbon ratios","title":"Current features"},{"location":"#installation","text":"","title":"Installation"},{"location":"#install-from-pypi","text":"The library is available on PyPi via pip install carbonify","title":"Install from PyPi"},{"location":"#for-developers","text":"You can clone the github repo / fork and develop locally Poetry is used for environment management, dependencies and publishing, after clone you can run # To setup the environment poetry install # To run Jupyter notebook or a python console poetry run jupyter notebook poetry run python","title":"For developers"},{"location":"#contributors","text":"Ekimetrics","title":"Contributors"},{"location":"home/installation/","text":"","title":"Installation"},{"location":"home/quickstart/","text":"","title":"Quickstart"},{"location":"home/releases/","text":"","title":"Releases"},{"location":"library/utils/","text":"Utils \u00b6","title":"Utils"},{"location":"library/utils/#utils","text":"","title":"Utils"},{"location":"tutorials/notebook-test/","text":"(function() { function addWidgetsRenderer() { var mimeElement = document.querySelector('script[type=\"application/vnd.jupyter.widget-view+json\"]'); var scriptElement = document.createElement('script'); var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js'; var widgetState; // Fallback for older version: try { widgetState = mimeElement && JSON.parse(mimeElement.innerHTML); if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) { widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js'; } } catch(e) {} scriptElement.src = widgetRendererSrc; document.body.appendChild(scriptElement); } document.addEventListener('DOMContentLoaded', addWidgetsRenderer); }()); # Base Data Science snippet import pandas as pd import numpy as np import matplotlib.pyplot as plt import os import time from tqdm import tqdm_notebook % matplotlib inline % load_ext autoreload % autoreload 2 print ( \"hello\" ) hello plt . plot ([ 1 , 2 , 3 ]) [<matplotlib.lines.Line2D at 0x1a660391c88>]","title":"Notebook test"},{"location":"tutorials/quickstart/","text":"","title":"Quickstart"}]}